plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

android {
    namespace 'com.github.yangkl.lib.retrofit_common'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    def retrofit_version = "2.9.0"
    api "com.squareup.retrofit2:retrofit:${retrofit_version}"
    api "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    api "com.squareup.retrofit2:adapter-rxjava2:${retrofit_version}"
    api 'com.squareup.okhttp3:logging-interceptor:3.10.0'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.yangkangli'//你要发布的库的组ID  建议使用包名
                artifactId = 'retrofit-common'//你要发布的库的名字
                version = '1.0'//库的版本 可以在外部定义一个变量，保持整个配置文件中的版本一致性
            }
        }
    }
}